<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical Evangelist</title>
    <description>Working as a Team Lead at Nisum Technologies, am passionate about technology and impact of technology on human life.</description>
    <link>http://vinaypandella.github.io//</link>
    <atom:link href="http://vinaypandella.github.io//feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Running Multiple Tomcat Instances using one source</title>
        <description>&lt;p&gt;Here’s a brief on how to run more than one instance of Tomcat on a single machine.&lt;/p&gt;

&lt;h2 id=&quot;install-tomcat&quot;&gt;Install Tomcat&lt;/h2&gt;
&lt;p&gt;Download Tomcat 5.5, 6.x, or 7.x and unzip it into an appropriate directory. Put it in /usr/local, so it ends up in a directory called /usr/local/apache-tomcat-5.5.17, and make a symlink named /usr/local/tomcat to that directory.&lt;/p&gt;

&lt;h2 id=&quot;make-directories-for-each-instance&quot;&gt;Make directories for each instance&lt;/h2&gt;

&lt;p&gt;For each instance of Tomcat you’re going to run, you’ll need a directory that will be CATALINA_BASE. For example, you might make them /var/tomcat/serverA and /var/tomcat/serverB.&lt;/p&gt;

&lt;p&gt;In each of these directories you need the following subdirectories: conf, logs, temp, webapps, and work.&lt;/p&gt;

&lt;p&gt;Put a server.xml and web.xml file in the conf directory. You can get these from the conf directory of the directory where you put the tomcat installation files, although of course you should tighten up your server.xml a bit.&lt;/p&gt;

&lt;p&gt;The webapps directory is where you’ll put the web applications you want to run on the particular instance of Tomcat.&lt;/p&gt;

&lt;p&gt;Usually you can do this through DevOps code.&lt;/p&gt;

&lt;h2 id=&quot;configure-the-ports-andor-addresses-for-each-instance&quot;&gt;Configure the ports and/or addresses for each instance&lt;/h2&gt;

&lt;p&gt;Tomcat listens to at least two network ports, one for the shutdown command, and one or more for accepting requests. Two instances of Tomcat can’t listen to the same port number on the same IP address, so you will need to edit your server.xml files to change the ports they listen to.&lt;/p&gt;

&lt;p&gt;The first port to look at is the shutdown port. This is used by the command line shutdown script (actually, but the Java code it runs) to tell the Tomcat instance to shut itself down. This port is defined at the top of the server.xml file for the instance.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;8001&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;_SHUTDOWN_COMMAND_&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure each instance uses a different port value. The port value will normally need to be higher than 1024, and shouldn’t conflict with any other network service running on the same system.&lt;/p&gt;

&lt;p&gt;Unlike the other ports Tomcat listens to, the shutdown port can’t be configured to listen to its port on a different IP address. It always listens on 127.0.0.1.&lt;/p&gt;

&lt;h2 id=&quot;startup&quot;&gt;Startup&lt;/h2&gt;

&lt;p&gt;Startup scripts are a whole other topic, but here’s the brief rundown. The main different from running a single Tomcat instance is you need to set CATALINA_BASE to the directory you set up for the particular instance you want to start (or stop). Here’s a typical startup routine:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/usr/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;-Xmx800m -Xms800m&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CATALINA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/usr/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tomcat&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CATALINA_BASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/var/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tomcat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serverA&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAVA_HOME&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAVA_OPTS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CATALINA_HOME&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CATALINA_BASE&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$CATALINA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;catalina&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 17 Jun 2014 15:04:30 -0700</pubDate>
        <link>http://vinaypandella.github.io//tomcat/server/coding/development/software/2014/06/17/Running%20Multiple%20Tomcat%20Instances%20on%20One%20Server/</link>
        <guid isPermaLink="true">http://vinaypandella.github.io//tomcat/server/coding/development/software/2014/06/17/Running%20Multiple%20Tomcat%20Instances%20on%20One%20Server/</guid>
      </item>
    
      <item>
        <title>Agile Coding</title>
        <description>&lt;p&gt;Knowing about agile practices and having basic idea on development/programming is not sufficient for a successful agile developer.
Following are the few principles which are required to be followed by an agile developer.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Program Intently and Expressively&lt;/li&gt;
  &lt;li&gt;Communicate in Code&lt;/li&gt;
  &lt;li&gt;Actively Evaluate Trade-Offs&lt;/li&gt;
  &lt;li&gt;Code in Increments&lt;/li&gt;
  &lt;li&gt;Keep It Simple&lt;/li&gt;
  &lt;li&gt;Write Cohesive Code&lt;/li&gt;
  &lt;li&gt;Tell, Don’t Ask&lt;/li&gt;
  &lt;li&gt;Substitute by Contract&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;program-intently-and-expressively&quot;&gt;Program Intently and Expressively&lt;/h2&gt;

&lt;p&gt;Choose readability over convenience, code clarity comes before performance. Always remember that code will be read many times more than it is written, so it is worth it to make life easier to those who follow.&lt;/p&gt;

&lt;h2 id=&quot;communicate-in-code&quot;&gt;Communicate in Code&lt;/h2&gt;

&lt;p&gt;Choose wisely the names of the methods and variables to be expressive. Comments should not shadow the expressiveness of the code. Instead, comments about methods should convey information about the purpose (why does the method exists) plus information about the arguments, return values and exceptions.&lt;/p&gt;

&lt;h2 id=&quot;actively-evaluate-trade-offs&quot;&gt;Actively Evaluate Trade-Offs&lt;/h2&gt;

&lt;p&gt;There is usually not a perfect answer to the best framework or development procedure (applicable to life too). So it is far more important to be aware what do we need to solve and choose the right solution/answer for that. Consider performance, convenience, productivity, cost and time. Let the stakeholder of the code you are writing mark you the focus you have to take.&lt;/p&gt;

&lt;h2 id=&quot;code-in-increments&quot;&gt;Code in Increments&lt;/h2&gt;

&lt;p&gt;Like running a marathon, do not focus on the end point. Instead, try to put closer objectives. This iteration not just let you produce more focused software components (methods, classes, modules, libraries) but also takes care of your mental healthiness by not burning you. Write code in short edit/build/test cycles.&lt;/p&gt;

&lt;h2 id=&quot;keep-it-simple&quot;&gt;Keep It Simple&lt;/h2&gt;

&lt;p&gt;take that necessary time and keep it simple.&lt;/p&gt;

&lt;h2 id=&quot;write-cohesive-code&quot;&gt;Write Cohesive Code&lt;/h2&gt;

&lt;p&gt;Cohesion is the measure of how functionally related the members of a software component are. It feels like rowing all in the same direction. Cohesion empowers you to group similar members by their functionality. Special mention to the Single Responsibility Principle when writing classes that states that a method should have only one reason to change. Keep classes focused and components small.&lt;/p&gt;

&lt;h2 id=&quot;tell-dont-ask&quot;&gt;Tell, Don’t Ask&lt;/h2&gt;

&lt;p&gt;Tell objects to do things based on their state. This business logic of the what the object does must reside inside the object itself, instead of playing with the object state in the calling class.&lt;/p&gt;

&lt;h2 id=&quot;substitute-by-contract&quot;&gt;Substitute by Contract&lt;/h2&gt;

&lt;p&gt;Inheritance vs. composition. If inheritance is chosen, overriding of methods should be done accepting the parent contract (not modifying its functionality) in such a way that the derived class can be substitute by the parent class. In most of the cases that you just want to add functionality to a class, though, composition is a most preferable option.&lt;/p&gt;

&lt;p&gt;Please visit this again am updating this with code examples and also trying to get the metrics that can be used to identify these from the code.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jun 2014 15:04:30 -0700</pubDate>
        <link>http://vinaypandella.github.io//lean/agile/coding/development/software/2014/06/05/Agile%20Coding/</link>
        <guid isPermaLink="true">http://vinaypandella.github.io//lean/agile/coding/development/software/2014/06/05/Agile%20Coding/</guid>
      </item>
    
      <item>
        <title>Lean Principles @ Software Development - I</title>
        <description>&lt;p&gt;Nowadays we commonly hear about agile methodology and agile practices in IT industry, I always felt that ‘ Agile at Scale ‘ is a bigger problem organizations face when they try to adopt to agile. All agile practices works pretty well in smaller to medium sized organizations when it comes to bigger organizations/enterprises the co-ordination should happen between large no of teams which are not co-located.
Though I have worked in different organizations who follow agile and being trained by IM [Iteration Manager ]/Agile coaches several times regarding Agile practices, still i feel like something is missing, in search for origins of Agile I came across ‘Lean Principles’ and am surprised that all agile practices are been derived based on the Lean Principles.
If every member in the organization at every department knows about this ‘Lean Principles’ and been educated about these core principles from Lean ‘ Agile at Scale ‘ becomes easier.&lt;/p&gt;

&lt;p&gt;Following are the few insights from the book Lean Software Development: An Agile Toolkit (Agile Software Development Series) Pearson Education , most of the content below is how the lean principles can be adopted to Software Development.&lt;/p&gt;

&lt;p&gt;Lean software development applies a wealth of information about applying lean techniques from industrial setting to software development. Wait for the requirements than to build up the application in anticipation of the requirements yet the ideal is to deliver the application immediately when the requirements are ready.&lt;/p&gt;

&lt;p&gt;Following are the seven principles at high level&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Eliminate Waste&lt;/li&gt;
  &lt;li&gt;Amplify Learning&lt;/li&gt;
  &lt;li&gt;Decide as late as possible&lt;/li&gt;
  &lt;li&gt;Deliver as fast as possible&lt;/li&gt;
  &lt;li&gt;Empower the team&lt;/li&gt;
  &lt;li&gt;Build integrity in&lt;/li&gt;
  &lt;li&gt;See the whole&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will go deeper in to the first principle Eliminate Waste in the below article&lt;/p&gt;

&lt;h2 id=&quot;first-principle--eliminate-waste&quot;&gt;First Principle : Eliminate Waste&lt;/h2&gt;

&lt;p&gt;&lt;i&gt;Origins of Lean Thinking&lt;/i&gt;
In the late 1940s all the car manufacturing companies used to follow the mass production strategy. Mass production was the cheapest way to make cars which is making the same kind of car in large quantities.&lt;/p&gt;

&lt;p&gt;In this era Toyota set out to manufacture cars for Japan market for cheaper price. Japan market at this time not large enough to use the Mass production strategy so the question was “ How could Toyota make cars in small quantities but keep them as inexpensive as mass-produced cars?”&lt;/p&gt;

&lt;p&gt;To solve this problem Toyota Production system emerged to form the basis of a whole new way of thinking about manufacturing, logistics and eventually product development. At the heart of this thinking was fundamental lean principle : Eliminate Waste.&lt;/p&gt;

&lt;p&gt;In this principle anything that does not create value for a customer is considered as waste.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;   A part that is sitting around waiting to be used is waste. &lt;/li&gt;
&lt;li&gt;   Making something that is not immediately used is waste.       &lt;/li&gt;
&lt;li&gt;   Motion is waste. &lt;/li&gt;
&lt;li&gt;  Transportation is waste.&lt;/li&gt;
&lt;li&gt;   Waiting is waste.            &lt;/li&gt;
&lt;li&gt;   Any extra processing steps are waste.&lt;/li&gt;
&lt;li&gt;   Defects are waste.                        &lt;/li&gt;

&lt;/ol&gt;

&lt;p&gt;If something does not directly add value as perceived by the customer, it is waste.every step in the waterfall model other than analysis and coding is considered as waste.&lt;/p&gt;

&lt;p&gt;Following are the different wastes that have been identified in manufacturing processes and we can see how those can be related to software development.&lt;/p&gt;

&lt;table border=&quot;1&quot;&gt;
&lt;tr&gt;
 &lt;th&gt;  Wastes of Manufacturing  &lt;/th&gt; &lt;th&gt;  Wastes of Software Development  &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
 &lt;td&gt; Inventory &lt;/td&gt; &lt;td&gt; Partially Done Work &lt;/td&gt;
&lt;/tr&gt;
 &lt;td&gt; Extra Processing &lt;/td&gt; &lt;td&gt; Extra Processes &lt;/td&gt;
 
 &lt;tr&gt;
 &lt;td&gt; OverProduction &lt;/td&gt; &lt;td&gt; Extra Features &lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt; Transportation &lt;/td&gt; &lt;td&gt; Task Switching &lt;/td&gt;
 &lt;/tr&gt;&lt;tr&gt;
 &lt;td&gt; Waiting &lt;/td&gt; &lt;td&gt; Waiting &lt;/td&gt;
 &lt;/tr&gt;    &lt;tr&gt;
 &lt;td&gt; Motion &lt;/td&gt; &lt;td&gt; Motion &lt;/td&gt;
 &lt;/tr&gt;        &lt;tr&gt;
 &lt;td&gt; Defects &lt;/td&gt; &lt;td&gt; Defects &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&quot;partially-done-work&quot;&gt;Partially Done Work&lt;/h2&gt;

&lt;p&gt;Partially done software development has a tendency to be obsolete, and it gets in the way of any other development work that we do.&lt;/p&gt;

&lt;p&gt;Problems with Partially Done Software Development&lt;/p&gt;

&lt;p&gt;Since it is not in production you have no idea whether it will eventually work in production.
You might have the business requirements ,  design documents and pile of code which is well covered with unit tests and may be with functional tests too, but you really don’t know if it solves the business problem until it is in production.&lt;/p&gt;

&lt;p&gt;What if the system never gets in to production? There is bit investment to write off.&lt;/p&gt;

&lt;p&gt;Minimizing the partially done software development is a risk-reduction as well as waste-reduction strategy.&lt;/p&gt;

&lt;h2 id=&quot;extra-processes&quot;&gt;Extra Processes&lt;/h2&gt;

&lt;p&gt;Paper work or documentation’s seriously is that all really necessary.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It consumes resources&lt;/li&gt;
&lt;li&gt;slows down reps one times.&lt;/li&gt;
&lt;li&gt;hides quality problems.&lt;/li&gt;
&lt;li&gt;gets lost.&lt;/li&gt;
&lt;li&gt;degrades and becomes obsolete.&lt;/li&gt;
&lt;li&gt;no one cares to read adds no value.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Does customer really finds this paper work or documentation more valuable? Some of the projects requires paper work or documentation as the required deliverable but does not mean that it adds value.&lt;/p&gt;

&lt;p&gt;If at all for a project if it is required you should follow the below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Keep to short&lt;/li&gt;
&lt;li&gt;Keep it high level.&lt;/li&gt;
&lt;li&gt;Do it off line.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are exceptions to these there might be some safety critical systems which are frequently regulated and often required to have written requirements, traceable to code, in this case instead of preparing bunch of documents about the requirements which can be used to evaluate the functionality of the delivered application it would be better if requirements are written in a table-driven or template driven format which can be understood by both users and developers.&lt;/p&gt;

&lt;p&gt;A good test to check if we need paperwork or not is to check if any one is eagerly waiting to use them for coding, testing and writing training manuals then these probably add value.&lt;/p&gt;

&lt;p&gt;Always try to eliminate the documentation work and see if it can be communicate in any other efficient way for example writing acceptance tests instead of writing requirements. In general delay documentation details of a feature until the iteration in which they are implemented.&lt;/p&gt;

&lt;h2 id=&quot;extra-features&quot;&gt;Extra features&lt;/h2&gt;

&lt;p&gt;How would an extra feature come in to an application and how does it becomes as a waste?&lt;/p&gt;

&lt;p&gt;Business owners might think that this feature might be good just in case if it is needed in future.
Developers might like to add a cool technical feature which is not needed but just wanted to see how it works.&lt;/p&gt;

&lt;p&gt;All these sounds good and harmless , but all these a serious waste. Why ? Every bit of code is to be minted by life time which means it should be completed , tested and integrated every time a change is made.&lt;/p&gt;

&lt;p&gt;Every bit of code adds the complexity to the system and might be potential failure point.&lt;/p&gt;

&lt;p&gt;There is great possibility that all this extra might become obsolete before its used.&lt;/p&gt;

&lt;p&gt;Resist the temptation , If the code / feature is not needed now putting it in to the system is a waste.&lt;/p&gt;

&lt;h2 id=&quot;task-switching&quot;&gt;Task Switching&lt;/h2&gt;

&lt;p&gt;Assigning resources to multiple projects is a source of waste.
Every time developers switch between tasks, a significant switching time is incurred as they get their thoughts incurred and get in the flow of new task.&lt;/p&gt;

&lt;p&gt;Belonging to multiple teams means more interruption and more task switching. This task switching time is waste.&lt;/p&gt;

&lt;p&gt;The fastest way to complete two projects that use the same resources is to do one at a time.&lt;/p&gt;

&lt;p&gt;Say that you have two tasks, each task task takes two days to complete.If you start working on one of them, it should get completed in two days.When it is done you can start the second task and it should get completed in two days.What if you start working on both tasks together and expect to switch between the tasks in between them?First of all neither of them will get completed in two days, but will they both get completed in four days? When you add switching time, they will probably take longer than four days near to five days.&lt;/p&gt;

&lt;h2 id=&quot;waiting&quot;&gt;Waiting&lt;/h2&gt;

&lt;p&gt;Biggest waste in software development is to wait for things to happen.&lt;/p&gt;

&lt;p&gt;Delays are common on software development processes, and it seems counter intuitive to think of these delays as waste.&lt;/p&gt;

&lt;p&gt;Some of the delays&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Delays in starting project.&lt;/li&gt;
  &lt;li&gt;Delays in staffing.&lt;/li&gt;
  &lt;li&gt;Delays due to excessive requirements documentation.&lt;/li&gt;
  &lt;li&gt;Delays in reviews and approvals.&lt;/li&gt;
  &lt;li&gt;Delays in testing.&lt;/li&gt;
  &lt;li&gt;Delays in deployment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How would delay effects customer? Delays keeps customer from realizing value as quickly as possible.&lt;/p&gt;

&lt;p&gt;When a critical customer need arrives in your development organization, the speed with which you can respond is directly related to the systematic delays in your development cycle.&lt;/p&gt;

&lt;h2 id=&quot;motion&quot;&gt;Motion&lt;/h2&gt;

&lt;p&gt;When a developer has a question, how much motion does it take to find out an answer?&lt;/p&gt;

&lt;p&gt;Are people at hand to help with a technical problem or to address any business questions?&lt;/p&gt;

&lt;p&gt;Development is an activity that requires great concentration, so walking down the hall take a lot more time than you might think.Developer might even took some time to reestablish the focus as it took to get the question answered.&lt;/p&gt;

&lt;p&gt;It is for this reason the agile software development practices generally recommend that the team work in a single room every one has access to every on in the team at any time of development.&lt;/p&gt;

&lt;p&gt;It may only relate to people, often even the artifacts move around.&lt;/p&gt;

&lt;p&gt;The biggest waste of in all document hands off is that documentation don’t cant really contain all information that the next person needs.&lt;/p&gt;

&lt;h2 id=&quot;defects&quot;&gt;Defects&lt;/h2&gt;

&lt;p&gt;The amount of waste caused by a defect is the product of the defect impact and the time it goes undetected.&lt;/p&gt;

&lt;p&gt;A critical defect that is detected in three minutes has less impact than the minor defect which is undiscovered for months.&lt;/p&gt;

&lt;p&gt;To reduce this waste find the defects as early as possible. Test immediately integrate often and release to production as soon as possible.&lt;/p&gt;

&lt;h2 id=&quot;management-activities&quot;&gt;Management Activities&lt;/h2&gt;
&lt;p&gt;Management Activities do not directly add value to a product, but they do have a big impact on waste in an organization.&lt;/p&gt;

&lt;p&gt;Project tracking and control systems also do not add value, and further, they may be an indication of too much work in the system.&lt;/p&gt;

&lt;p&gt;Authorization systems that are set up to review and approve changes to requirements often add significant delays as opposed to adding value to the customer.&lt;/p&gt;

&lt;p&gt;Consider Project Prioritization and work release system. If the work release system is good we don’t need much of project prioritization.&lt;/p&gt;

&lt;p&gt;Authorization systems that are setup to review and approve changes to requirements often add significant delay as opposed to adding value to customer.&lt;/p&gt;

&lt;p&gt;Learning to see waste is an ongoing process of changing the way you think about what is really necessary.&lt;/p&gt;

&lt;h2 id=&quot;map-your-value-stream&quot;&gt;Map your Value Stream&lt;/h2&gt;
&lt;p&gt;Mapping your value stream is a good way to start discovering the waste in your software development process.Creating a Value Stream map is a paper and pencil exercise you can easily perform while walking around your organization.
Your goal is to draw chart of the average customer request, from arrival to completion.Working with the people involved in each activity, sketch all the process steps necessary to fill the request, as well as the average amount of time that a request spends in each step.&lt;/p&gt;

&lt;p&gt;You might have already seen the following value map for the projects you have worked in water fall model.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vinaypandella.github.io//images/ValueStreamWaterfall.png&quot; alt=&quot;ValueStreamWaterfall&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the above value stream map RED is for wait time  and GREEN is activity time. The customer sign-off takes more time because customer thinks it as an higher risk since this map indicates that they dont get another chance to review and change what they need.In all other phases there are several reviews involved with client and even with external times which is adding more wait time in each and every phase.&lt;/p&gt;

&lt;p&gt;Value stream map for agile looks like follows&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vinaypandella.github.io//images/ValueStreamAgile.png&quot; alt=&quot;ValueStreamAgile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The initial value stream map indicates that customer sign-off might be a source of irritation as well as delay.It shows design reviews and reviews at all phases should be moved inline with development, since they are currently a great source of delay.
Finally it indicates that planning for deployment should occur earlier in the process.Since the team has decided on agile development, it will solve the problems by moving in to incremental development, gathering requirements as needed, integrating design reviews with coding and planning early for regular deployments.&lt;/p&gt;

&lt;p&gt;Thank You for reading this will post the remaining principles soon, Try This&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take some time to discuss each of the seven wastes of software development.&lt;/li&gt;
  &lt;li&gt;Develop a value stream map for your organization. Start with an incoming request and map timeline of its progress to providing customer value.Find out how mich time is spent to add value and how much time in waiting.Identify the biggest cause of delay and try to cut delay.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 25 May 2014 15:04:30 -0700</pubDate>
        <link>http://vinaypandella.github.io//lean/2014/05/25/Lean%20Development/</link>
        <guid isPermaLink="true">http://vinaypandella.github.io//lean/2014/05/25/Lean%20Development/</guid>
      </item>
    
  </channel>
</rss>
